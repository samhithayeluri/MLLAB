import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline
X = data.iloc[:, [0, 1, 2, 3, 4, 5, 6]].values
Y=data['target']
from sklearn.cluster import KMeans
wcss=[]
for i in range(1,11):
  kmeans=KMeans(n_clusters=i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
  kmeans.fit(X)
  wcss.append(kmeans.inertia_)
  plt.plot(range(1,11),wcss)
plt.xlabel('number of clusters')
plt.ylabel('WCSS')

km=KMeans(n_clusters=3)
model=km.fit(X)
pred=km.labels_

#plotting for kmeans
plt.scatter(X[pred_kmeans == 0, 5], X[pred_kmeans == 0, 0], s = 80, c = 'orange', label = 'Target 0')
plt.scatter(X[pred_kmeans == 1, 0], X[pred_kmeans == 1, 5], s = 80, c = 'yellow', label = 'Target 1')
plt.scatter(X[pred_kmeans == 2, 0], X[pred_kmeans == 2, 5], s = 80, c = 'green', label = 'Target 2')
plt.title('Kmeans Plot for Seed dataset')
plt.legend()


import scipy.cluster.hierarchy as sch
Z = sch.linkage(X, method = 'median')
plt.figure(figsize=(20,7))
den = sch.dendrogram(Z)

# Plotting the HCA Cluster
plt.scatter(X[pred1 == 0, 0], X[pred1 == 0, 3], s = 80, c = 'orange', label = 'Target 0')
plt.scatter(X[pred1 == 1, 1], X[pred1 == 1, 4], s = 80, c = 'yellow', label = 'Target 1')
plt.scatter(X[pred1 == 2, 1], X[pred1 == 2, 5], s = 80, c = 'green', label = 'Target 2')
plt.title('Hierarchical Plot for Seed dataset')
plt.legend()
