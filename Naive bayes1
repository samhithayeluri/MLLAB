from sklearn import preprocessing
from sklearn.naive_bayes import GaussianNB
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn import metrics
from sklearn.metrics import plot_confusion_matrix
import numpy as np
import matplotlib.pyplot as plt

data_train = pd.read_csv('play_tennis_train.csv')
data_test = pd.read_csv('play_tennis_test.csv')


le = preprocessing.LabelEncoder()
data_train_df = pd.DataFrame(data_train)
data_train_df_encoded = data_train_df.apply(le.fit_transform)
data_test_df = pd.DataFrame(data_test)
data_test_df_encoded = data_test_df.apply(le.fit_transform)
x_train = data_train_df_encoded.drop(['play'],axis=1)
y_train = data_train_df_encoded['play']
x_test = data_test_df_encoded.drop(['play'],axis=1)
y_test = data_test_df_encoded['play']

model = GaussianNB()
nbtrain = model.fit(x_train, y_train)
y_pred = nbtrain.predict(x_test)
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))
